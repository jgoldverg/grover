// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: grover_udp.proto

package groverudpv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OverwritePolicy int32

const (
	OverwritePolicy_OVERWRITE_UNSPECIFIED  OverwritePolicy = 0
	OverwritePolicy_OVERWRITE_ALWAYS       OverwritePolicy = 1
	OverwritePolicy_OVERWRITE_IF_NEWER     OverwritePolicy = 2
	OverwritePolicy_OVERWRITE_NEVER        OverwritePolicy = 3
	OverwritePolicy_OVERWRITE_IF_DIFFERENT OverwritePolicy = 4
)

// Enum value maps for OverwritePolicy.
var (
	OverwritePolicy_name = map[int32]string{
		0: "OVERWRITE_UNSPECIFIED",
		1: "OVERWRITE_ALWAYS",
		2: "OVERWRITE_IF_NEWER",
		3: "OVERWRITE_NEVER",
		4: "OVERWRITE_IF_DIFFERENT",
	}
	OverwritePolicy_value = map[string]int32{
		"OVERWRITE_UNSPECIFIED":  0,
		"OVERWRITE_ALWAYS":       1,
		"OVERWRITE_IF_NEWER":     2,
		"OVERWRITE_NEVER":        3,
		"OVERWRITE_IF_DIFFERENT": 4,
	}
)

func (x OverwritePolicy) Enum() *OverwritePolicy {
	p := new(OverwritePolicy)
	*p = x
	return p
}

func (x OverwritePolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OverwritePolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_grover_udp_proto_enumTypes[0].Descriptor()
}

func (OverwritePolicy) Type() protoreflect.EnumType {
	return &file_grover_udp_proto_enumTypes[0]
}

func (x OverwritePolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OverwritePolicy.Descriptor instead.
func (OverwritePolicy) EnumDescriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{0}
}

type ChecksumType int32

const (
	ChecksumType_CHECKSUM_NONE   ChecksumType = 0
	ChecksumType_CHECKSUM_MD5    ChecksumType = 1
	ChecksumType_CHECKSUM_SHA256 ChecksumType = 2
	ChecksumType_CHECKSUM_XXH3   ChecksumType = 3
)

// Enum value maps for ChecksumType.
var (
	ChecksumType_name = map[int32]string{
		0: "CHECKSUM_NONE",
		1: "CHECKSUM_MD5",
		2: "CHECKSUM_SHA256",
		3: "CHECKSUM_XXH3",
	}
	ChecksumType_value = map[string]int32{
		"CHECKSUM_NONE":   0,
		"CHECKSUM_MD5":    1,
		"CHECKSUM_SHA256": 2,
		"CHECKSUM_XXH3":   3,
	}
)

func (x ChecksumType) Enum() *ChecksumType {
	p := new(ChecksumType)
	*p = x
	return p
}

func (x ChecksumType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChecksumType) Descriptor() protoreflect.EnumDescriptor {
	return file_grover_udp_proto_enumTypes[1].Descriptor()
}

func (ChecksumType) Type() protoreflect.EnumType {
	return &file_grover_udp_proto_enumTypes[1]
}

func (x ChecksumType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChecksumType.Descriptor instead.
func (ChecksumType) EnumDescriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{1}
}

type FsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FsEntry) Reset() {
	*x = FsEntry{}
	mi := &file_grover_udp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsEntry) ProtoMessage() {}

func (x *FsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsEntry.ProtoReflect.Descriptor instead.
func (*FsEntry) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{0}
}

func (x *FsEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Transfer tuning knobs
type FileTransferParams struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Concurrency    uint32                 `protobuf:"varint,1,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	Parallelism    uint32                 `protobuf:"varint,2,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Pipelining     uint32                 `protobuf:"varint,3,opt,name=pipelining,proto3" json:"pipelining,omitempty"`
	ChunkSize      uint64                 `protobuf:"varint,4,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	RateLimitMbps  uint32                 `protobuf:"varint,5,opt,name=rate_limit_mbps,json=rateLimitMbps,proto3" json:"rate_limit_mbps,omitempty"`
	Overwrite      OverwritePolicy        `protobuf:"varint,6,opt,name=overwrite,proto3,enum=groverudp.v1.OverwritePolicy" json:"overwrite,omitempty"`
	ChecksumType   ChecksumType           `protobuf:"varint,7,opt,name=checksum_type,json=checksumType,proto3,enum=groverudp.v1.ChecksumType" json:"checksum_type,omitempty"`
	VerifyChecksum bool                   `protobuf:"varint,8,opt,name=verify_checksum,json=verifyChecksum,proto3" json:"verify_checksum,omitempty"`
	MaxRetries     uint32                 `protobuf:"varint,9,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	RetryBackoffMs uint32                 `protobuf:"varint,10,opt,name=retry_backoff_ms,json=retryBackoffMs,proto3" json:"retry_backoff_ms,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FileTransferParams) Reset() {
	*x = FileTransferParams{}
	mi := &file_grover_udp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileTransferParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferParams) ProtoMessage() {}

func (x *FileTransferParams) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferParams.ProtoReflect.Descriptor instead.
func (*FileTransferParams) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{1}
}

func (x *FileTransferParams) GetConcurrency() uint32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *FileTransferParams) GetParallelism() uint32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *FileTransferParams) GetPipelining() uint32 {
	if x != nil {
		return x.Pipelining
	}
	return 0
}

func (x *FileTransferParams) GetChunkSize() uint64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *FileTransferParams) GetRateLimitMbps() uint32 {
	if x != nil {
		return x.RateLimitMbps
	}
	return 0
}

func (x *FileTransferParams) GetOverwrite() OverwritePolicy {
	if x != nil {
		return x.Overwrite
	}
	return OverwritePolicy_OVERWRITE_UNSPECIFIED
}

func (x *FileTransferParams) GetChecksumType() ChecksumType {
	if x != nil {
		return x.ChecksumType
	}
	return ChecksumType_CHECKSUM_NONE
}

func (x *FileTransferParams) GetVerifyChecksum() bool {
	if x != nil {
		return x.VerifyChecksum
	}
	return false
}

func (x *FileTransferParams) GetMaxRetries() uint32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *FileTransferParams) GetRetryBackoffMs() uint32 {
	if x != nil {
		return x.RetryBackoffMs
	}
	return 0
}

type Endpoint struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Raw            string                 `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	Scheme         string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Paths          []string               `protobuf:"bytes,3,rep,name=paths,proto3" json:"paths,omitempty"`
	CredentialHint string                 `protobuf:"bytes,4,opt,name=credential_hint,json=credentialHint,proto3" json:"credential_hint,omitempty"`
	CredentialId   string                 `protobuf:"bytes,5,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	mi := &file_grover_udp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{2}
}

func (x *Endpoint) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Endpoint) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Endpoint) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *Endpoint) GetCredentialHint() string {
	if x != nil {
		return x.CredentialHint
	}
	return ""
}

func (x *Endpoint) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

type TransferEdgeOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferEdgeOption) Reset() {
	*x = TransferEdgeOption{}
	mi := &file_grover_udp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferEdgeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferEdgeOption) ProtoMessage() {}

func (x *TransferEdgeOption) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferEdgeOption.ProtoReflect.Descriptor instead.
func (*TransferEdgeOption) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{3}
}

func (x *TransferEdgeOption) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TransferEdgeOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TransferEdge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceIndex   uint32                 `protobuf:"varint,1,opt,name=source_index,json=sourceIndex,proto3" json:"source_index,omitempty"`
	DestIndex     uint32                 `protobuf:"varint,2,opt,name=dest_index,json=destIndex,proto3" json:"dest_index,omitempty"`
	SourcePath    string                 `protobuf:"bytes,3,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	DestPath      string                 `protobuf:"bytes,4,opt,name=dest_path,json=destPath,proto3" json:"dest_path,omitempty"`
	Options       []*TransferEdgeOption  `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferEdge) Reset() {
	*x = TransferEdge{}
	mi := &file_grover_udp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferEdge) ProtoMessage() {}

func (x *TransferEdge) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferEdge.ProtoReflect.Descriptor instead.
func (*TransferEdge) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{4}
}

func (x *TransferEdge) GetSourceIndex() uint32 {
	if x != nil {
		return x.SourceIndex
	}
	return 0
}

func (x *TransferEdge) GetDestIndex() uint32 {
	if x != nil {
		return x.DestIndex
	}
	return 0
}

func (x *TransferEdge) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *TransferEdge) GetDestPath() string {
	if x != nil {
		return x.DestPath
	}
	return ""
}

func (x *TransferEdge) GetOptions() []*TransferEdgeOption {
	if x != nil {
		return x.Options
	}
	return nil
}

// Request
type FileTransferRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Sources        []*Endpoint            `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	Destinations   []*Endpoint            `protobuf:"bytes,2,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Edges          []*TransferEdge        `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
	Params         *FileTransferParams    `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	DeleteSource   bool                   `protobuf:"varint,6,opt,name=delete_source,json=deleteSource,proto3" json:"delete_source,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FileTransferRequest) Reset() {
	*x = FileTransferRequest{}
	mi := &file_grover_udp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferRequest) ProtoMessage() {}

func (x *FileTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferRequest.ProtoReflect.Descriptor instead.
func (*FileTransferRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{5}
}

func (x *FileTransferRequest) GetSources() []*Endpoint {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *FileTransferRequest) GetDestinations() []*Endpoint {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *FileTransferRequest) GetEdges() []*TransferEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *FileTransferRequest) GetParams() *FileTransferParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *FileTransferRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *FileTransferRequest) GetDeleteSource() bool {
	if x != nil {
		return x.DeleteSource
	}
	return false
}

// Response
type FileTransferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransferId    string                 `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"` // server-generated ID
	Accepted      bool                   `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileTransferResponse) Reset() {
	*x = FileTransferResponse{}
	mi := &file_grover_udp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferResponse) ProtoMessage() {}

func (x *FileTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferResponse.ProtoReflect.Descriptor instead.
func (*FileTransferResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{6}
}

func (x *FileTransferResponse) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *FileTransferResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *FileTransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateUdpPortsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortCount     uint32                 `protobuf:"varint,1,opt,name=port_count,json=portCount,proto3" json:"port_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUdpPortsRequest) Reset() {
	*x = CreateUdpPortsRequest{}
	mi := &file_grover_udp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUdpPortsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUdpPortsRequest) ProtoMessage() {}

func (x *CreateUdpPortsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUdpPortsRequest.ProtoReflect.Descriptor instead.
func (*CreateUdpPortsRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUdpPortsRequest) GetPortCount() uint32 {
	if x != nil {
		return x.PortCount
	}
	return 0
}

type CreateUdpPortsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []uint32               `protobuf:"varint,1,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUdpPortsResponse) Reset() {
	*x = CreateUdpPortsResponse{}
	mi := &file_grover_udp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUdpPortsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUdpPortsResponse) ProtoMessage() {}

func (x *CreateUdpPortsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUdpPortsResponse.ProtoReflect.Descriptor instead.
func (*CreateUdpPortsResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUdpPortsResponse) GetPorts() []uint32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

type DeleteUdpPortsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortNum       []uint32               `protobuf:"varint,1,rep,packed,name=port_num,json=portNum,proto3" json:"port_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUdpPortsRequest) Reset() {
	*x = DeleteUdpPortsRequest{}
	mi := &file_grover_udp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUdpPortsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUdpPortsRequest) ProtoMessage() {}

func (x *DeleteUdpPortsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUdpPortsRequest.ProtoReflect.Descriptor instead.
func (*DeleteUdpPortsRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUdpPortsRequest) GetPortNum() []uint32 {
	if x != nil {
		return x.PortNum
	}
	return nil
}

type DeleteUdpPortsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUdpPortsResponse) Reset() {
	*x = DeleteUdpPortsResponse{}
	mi := &file_grover_udp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUdpPortsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUdpPortsResponse) ProtoMessage() {}

func (x *DeleteUdpPortsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUdpPortsResponse.ProtoReflect.Descriptor instead.
func (*DeleteUdpPortsResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteUdpPortsResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ListPortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPortRequest) Reset() {
	*x = ListPortRequest{}
	mi := &file_grover_udp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortRequest) ProtoMessage() {}

func (x *ListPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortRequest.ProtoReflect.Descriptor instead.
func (*ListPortRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{11}
}

type ListPortResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          []uint32               `protobuf:"varint,1,rep,packed,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPortResponse) Reset() {
	*x = ListPortResponse{}
	mi := &file_grover_udp_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortResponse) ProtoMessage() {}

func (x *ListPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortResponse.ProtoReflect.Descriptor instead.
func (*ListPortResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{12}
}

func (x *ListPortResponse) GetPort() []uint32 {
	if x != nil {
		return x.Port
	}
	return nil
}

type StartServerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UdpPort        uint32                 `protobuf:"varint,1,opt,name=udp_port,json=udpPort,proto3" json:"udp_port,omitempty"`
	WorkersPerFile uint32                 `protobuf:"varint,2,opt,name=workers_per_file,json=workersPerFile,proto3" json:"workers_per_file,omitempty"`
	MaxTransfers   uint32                 `protobuf:"varint,3,opt,name=max_transfers,json=maxTransfers,proto3" json:"max_transfers,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StartServerRequest) Reset() {
	*x = StartServerRequest{}
	mi := &file_grover_udp_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerRequest) ProtoMessage() {}

func (x *StartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerRequest.ProtoReflect.Descriptor instead.
func (*StartServerRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{13}
}

func (x *StartServerRequest) GetUdpPort() uint32 {
	if x != nil {
		return x.UdpPort
	}
	return 0
}

func (x *StartServerRequest) GetWorkersPerFile() uint32 {
	if x != nil {
		return x.WorkersPerFile
	}
	return 0
}

func (x *StartServerRequest) GetMaxTransfers() uint32 {
	if x != nil {
		return x.MaxTransfers
	}
	return 0
}

type StartServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartServerResponse) Reset() {
	*x = StartServerResponse{}
	mi := &file_grover_udp_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerResponse) ProtoMessage() {}

func (x *StartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerResponse.ProtoReflect.Descriptor instead.
func (*StartServerResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{14}
}

func (x *StartServerResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StartServerResponse) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerRequest) Reset() {
	*x = StopServerRequest{}
	mi := &file_grover_udp_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerRequest) ProtoMessage() {}

func (x *StopServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerRequest.ProtoReflect.Descriptor instead.
func (*StopServerRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{15}
}

type StopServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerResponse) Reset() {
	*x = StopServerResponse{}
	mi := &file_grover_udp_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerResponse) ProtoMessage() {}

func (x *StopServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerResponse.ProtoReflect.Descriptor instead.
func (*StopServerResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{16}
}

func (x *StopServerResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StopServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_grover_udp_proto protoreflect.FileDescriptor

const file_grover_udp_proto_rawDesc = "" +
	"\n" +
	"\x10grover_udp.proto\x12\fgroverudp.v1\"\x1d\n" +
	"\aFsEntry\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\xb1\x03\n" +
	"\x12FileTransferParams\x12 \n" +
	"\vconcurrency\x18\x01 \x01(\rR\vconcurrency\x12 \n" +
	"\vparallelism\x18\x02 \x01(\rR\vparallelism\x12\x1e\n" +
	"\n" +
	"pipelining\x18\x03 \x01(\rR\n" +
	"pipelining\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x04 \x01(\x04R\tchunkSize\x12&\n" +
	"\x0frate_limit_mbps\x18\x05 \x01(\rR\rrateLimitMbps\x12;\n" +
	"\toverwrite\x18\x06 \x01(\x0e2\x1d.groverudp.v1.OverwritePolicyR\toverwrite\x12?\n" +
	"\rchecksum_type\x18\a \x01(\x0e2\x1a.groverudp.v1.ChecksumTypeR\fchecksumType\x12'\n" +
	"\x0fverify_checksum\x18\b \x01(\bR\x0everifyChecksum\x12\x1f\n" +
	"\vmax_retries\x18\t \x01(\rR\n" +
	"maxRetries\x12(\n" +
	"\x10retry_backoff_ms\x18\n" +
	" \x01(\rR\x0eretryBackoffMs\"\x98\x01\n" +
	"\bEndpoint\x12\x10\n" +
	"\x03raw\x18\x01 \x01(\tR\x03raw\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x14\n" +
	"\x05paths\x18\x03 \x03(\tR\x05paths\x12'\n" +
	"\x0fcredential_hint\x18\x04 \x01(\tR\x0ecredentialHint\x12#\n" +
	"\rcredential_id\x18\x05 \x01(\tR\fcredentialId\"<\n" +
	"\x12TransferEdgeOption\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xca\x01\n" +
	"\fTransferEdge\x12!\n" +
	"\fsource_index\x18\x01 \x01(\rR\vsourceIndex\x12\x1d\n" +
	"\n" +
	"dest_index\x18\x02 \x01(\rR\tdestIndex\x12\x1f\n" +
	"\vsource_path\x18\x03 \x01(\tR\n" +
	"sourcePath\x12\x1b\n" +
	"\tdest_path\x18\x04 \x01(\tR\bdestPath\x12:\n" +
	"\aoptions\x18\x05 \x03(\v2 .groverudp.v1.TransferEdgeOptionR\aoptions\"\xbd\x02\n" +
	"\x13FileTransferRequest\x120\n" +
	"\asources\x18\x01 \x03(\v2\x16.groverudp.v1.EndpointR\asources\x12:\n" +
	"\fdestinations\x18\x02 \x03(\v2\x16.groverudp.v1.EndpointR\fdestinations\x120\n" +
	"\x05edges\x18\x03 \x03(\v2\x1a.groverudp.v1.TransferEdgeR\x05edges\x128\n" +
	"\x06params\x18\x04 \x01(\v2 .groverudp.v1.FileTransferParamsR\x06params\x12'\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tR\x0eidempotencyKey\x12#\n" +
	"\rdelete_source\x18\x06 \x01(\bR\fdeleteSource\"m\n" +
	"\x14FileTransferResponse\x12\x1f\n" +
	"\vtransfer_id\x18\x01 \x01(\tR\n" +
	"transferId\x12\x1a\n" +
	"\baccepted\x18\x02 \x01(\bR\baccepted\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"6\n" +
	"\x15CreateUdpPortsRequest\x12\x1d\n" +
	"\n" +
	"port_count\x18\x01 \x01(\rR\tportCount\".\n" +
	"\x16CreateUdpPortsResponse\x12\x14\n" +
	"\x05ports\x18\x01 \x03(\rR\x05ports\"2\n" +
	"\x15DeleteUdpPortsRequest\x12\x19\n" +
	"\bport_num\x18\x01 \x03(\rR\aportNum\"(\n" +
	"\x16DeleteUdpPortsResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\x11\n" +
	"\x0fListPortRequest\"&\n" +
	"\x10ListPortResponse\x12\x12\n" +
	"\x04port\x18\x01 \x03(\rR\x04port\"~\n" +
	"\x12StartServerRequest\x12\x19\n" +
	"\budp_port\x18\x01 \x01(\rR\audpPort\x12(\n" +
	"\x10workers_per_file\x18\x02 \x01(\rR\x0eworkersPerFile\x12#\n" +
	"\rmax_transfers\x18\x03 \x01(\rR\fmaxTransfers\"S\n" +
	"\x13StartServerResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x13\n" +
	"\x11StopServerRequest\">\n" +
	"\x12StopServerResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\x8b\x01\n" +
	"\x0fOverwritePolicy\x12\x19\n" +
	"\x15OVERWRITE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10OVERWRITE_ALWAYS\x10\x01\x12\x16\n" +
	"\x12OVERWRITE_IF_NEWER\x10\x02\x12\x13\n" +
	"\x0fOVERWRITE_NEVER\x10\x03\x12\x1a\n" +
	"\x16OVERWRITE_IF_DIFFERENT\x10\x04*[\n" +
	"\fChecksumType\x12\x11\n" +
	"\rCHECKSUM_NONE\x10\x00\x12\x10\n" +
	"\fCHECKSUM_MD5\x10\x01\x12\x13\n" +
	"\x0fCHECKSUM_SHA256\x10\x02\x12\x11\n" +
	"\rCHECKSUM_XXH3\x10\x032\xb9\x03\n" +
	"\fGroverServer\x12R\n" +
	"\vStartServer\x12 .groverudp.v1.StartServerRequest\x1a!.groverudp.v1.StartServerResponse\x12O\n" +
	"\n" +
	"StopServer\x12\x1f.groverudp.v1.StopServerRequest\x1a .groverudp.v1.StopServerResponse\x12J\n" +
	"\tListPorts\x12\x1d.groverudp.v1.ListPortRequest\x1a\x1e.groverudp.v1.ListPortResponse\x12[\n" +
	"\x0eDeleteUdpPorts\x12#.groverudp.v1.DeleteUdpPortsRequest\x1a$.groverudp.v1.DeleteUdpPortsResponse\x12[\n" +
	"\x0eCreateUdpPorts\x12#.groverudp.v1.CreateUdpPortsRequest\x1a$.groverudp.v1.CreateUdpPortsResponse2n\n" +
	"\x0fTransferService\x12[\n" +
	"\x12LaunchFileTransfer\x12!.groverudp.v1.FileTransferRequest\x1a\".groverudp.v1.FileTransferResponseBBZ@github.com/jgoldverg/grover/pkg/groverpb/groverudpv1;groverudpv1b\x06proto3"

var (
	file_grover_udp_proto_rawDescOnce sync.Once
	file_grover_udp_proto_rawDescData []byte
)

func file_grover_udp_proto_rawDescGZIP() []byte {
	file_grover_udp_proto_rawDescOnce.Do(func() {
		file_grover_udp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grover_udp_proto_rawDesc), len(file_grover_udp_proto_rawDesc)))
	})
	return file_grover_udp_proto_rawDescData
}

var file_grover_udp_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_grover_udp_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_grover_udp_proto_goTypes = []any{
	(OverwritePolicy)(0),           // 0: groverudp.v1.OverwritePolicy
	(ChecksumType)(0),              // 1: groverudp.v1.ChecksumType
	(*FsEntry)(nil),                // 2: groverudp.v1.FsEntry
	(*FileTransferParams)(nil),     // 3: groverudp.v1.FileTransferParams
	(*Endpoint)(nil),               // 4: groverudp.v1.Endpoint
	(*TransferEdgeOption)(nil),     // 5: groverudp.v1.TransferEdgeOption
	(*TransferEdge)(nil),           // 6: groverudp.v1.TransferEdge
	(*FileTransferRequest)(nil),    // 7: groverudp.v1.FileTransferRequest
	(*FileTransferResponse)(nil),   // 8: groverudp.v1.FileTransferResponse
	(*CreateUdpPortsRequest)(nil),  // 9: groverudp.v1.CreateUdpPortsRequest
	(*CreateUdpPortsResponse)(nil), // 10: groverudp.v1.CreateUdpPortsResponse
	(*DeleteUdpPortsRequest)(nil),  // 11: groverudp.v1.DeleteUdpPortsRequest
	(*DeleteUdpPortsResponse)(nil), // 12: groverudp.v1.DeleteUdpPortsResponse
	(*ListPortRequest)(nil),        // 13: groverudp.v1.ListPortRequest
	(*ListPortResponse)(nil),       // 14: groverudp.v1.ListPortResponse
	(*StartServerRequest)(nil),     // 15: groverudp.v1.StartServerRequest
	(*StartServerResponse)(nil),    // 16: groverudp.v1.StartServerResponse
	(*StopServerRequest)(nil),      // 17: groverudp.v1.StopServerRequest
	(*StopServerResponse)(nil),     // 18: groverudp.v1.StopServerResponse
}
var file_grover_udp_proto_depIdxs = []int32{
	0,  // 0: groverudp.v1.FileTransferParams.overwrite:type_name -> groverudp.v1.OverwritePolicy
	1,  // 1: groverudp.v1.FileTransferParams.checksum_type:type_name -> groverudp.v1.ChecksumType
	5,  // 2: groverudp.v1.TransferEdge.options:type_name -> groverudp.v1.TransferEdgeOption
	4,  // 3: groverudp.v1.FileTransferRequest.sources:type_name -> groverudp.v1.Endpoint
	4,  // 4: groverudp.v1.FileTransferRequest.destinations:type_name -> groverudp.v1.Endpoint
	6,  // 5: groverudp.v1.FileTransferRequest.edges:type_name -> groverudp.v1.TransferEdge
	3,  // 6: groverudp.v1.FileTransferRequest.params:type_name -> groverudp.v1.FileTransferParams
	15, // 7: groverudp.v1.GroverServer.StartServer:input_type -> groverudp.v1.StartServerRequest
	17, // 8: groverudp.v1.GroverServer.StopServer:input_type -> groverudp.v1.StopServerRequest
	13, // 9: groverudp.v1.GroverServer.ListPorts:input_type -> groverudp.v1.ListPortRequest
	11, // 10: groverudp.v1.GroverServer.DeleteUdpPorts:input_type -> groverudp.v1.DeleteUdpPortsRequest
	9,  // 11: groverudp.v1.GroverServer.CreateUdpPorts:input_type -> groverudp.v1.CreateUdpPortsRequest
	7,  // 12: groverudp.v1.TransferService.LaunchFileTransfer:input_type -> groverudp.v1.FileTransferRequest
	16, // 13: groverudp.v1.GroverServer.StartServer:output_type -> groverudp.v1.StartServerResponse
	18, // 14: groverudp.v1.GroverServer.StopServer:output_type -> groverudp.v1.StopServerResponse
	14, // 15: groverudp.v1.GroverServer.ListPorts:output_type -> groverudp.v1.ListPortResponse
	12, // 16: groverudp.v1.GroverServer.DeleteUdpPorts:output_type -> groverudp.v1.DeleteUdpPortsResponse
	10, // 17: groverudp.v1.GroverServer.CreateUdpPorts:output_type -> groverudp.v1.CreateUdpPortsResponse
	8,  // 18: groverudp.v1.TransferService.LaunchFileTransfer:output_type -> groverudp.v1.FileTransferResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_grover_udp_proto_init() }
func file_grover_udp_proto_init() {
	if File_grover_udp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grover_udp_proto_rawDesc), len(file_grover_udp_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_grover_udp_proto_goTypes,
		DependencyIndexes: file_grover_udp_proto_depIdxs,
		EnumInfos:         file_grover_udp_proto_enumTypes,
		MessageInfos:      file_grover_udp_proto_msgTypes,
	}.Build()
	File_grover_udp_proto = out.File
	file_grover_udp_proto_goTypes = nil
	file_grover_udp_proto_depIdxs = nil
}
