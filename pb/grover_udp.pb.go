// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: grover_udp.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartServerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UdpPort        uint32                 `protobuf:"varint,1,opt,name=udp_port,json=udpPort,proto3" json:"udp_port,omitempty"`
	WorkersPerFile uint32                 `protobuf:"varint,2,opt,name=workers_per_file,json=workersPerFile,proto3" json:"workers_per_file,omitempty"`
	MaxTransfers   uint32                 `protobuf:"varint,3,opt,name=max_transfers,json=maxTransfers,proto3" json:"max_transfers,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StartServerRequest) Reset() {
	*x = StartServerRequest{}
	mi := &file_grover_udp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerRequest) ProtoMessage() {}

func (x *StartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerRequest.ProtoReflect.Descriptor instead.
func (*StartServerRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{0}
}

func (x *StartServerRequest) GetUdpPort() uint32 {
	if x != nil {
		return x.UdpPort
	}
	return 0
}

func (x *StartServerRequest) GetWorkersPerFile() uint32 {
	if x != nil {
		return x.WorkersPerFile
	}
	return 0
}

func (x *StartServerRequest) GetMaxTransfers() uint32 {
	if x != nil {
		return x.MaxTransfers
	}
	return 0
}

type StartServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartServerResponse) Reset() {
	*x = StartServerResponse{}
	mi := &file_grover_udp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerResponse) ProtoMessage() {}

func (x *StartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerResponse.ProtoReflect.Descriptor instead.
func (*StartServerResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{1}
}

func (x *StartServerResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StartServerResponse) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerRequest) Reset() {
	*x = StopServerRequest{}
	mi := &file_grover_udp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerRequest) ProtoMessage() {}

func (x *StopServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerRequest.ProtoReflect.Descriptor instead.
func (*StopServerRequest) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{2}
}

type StopServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerResponse) Reset() {
	*x = StopServerResponse{}
	mi := &file_grover_udp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerResponse) ProtoMessage() {}

func (x *StopServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grover_udp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerResponse.ProtoReflect.Descriptor instead.
func (*StopServerResponse) Descriptor() ([]byte, []int) {
	return file_grover_udp_proto_rawDescGZIP(), []int{3}
}

func (x *StopServerResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StopServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_grover_udp_proto protoreflect.FileDescriptor

const file_grover_udp_proto_rawDesc = "" +
	"\n" +
	"\x10grover_udp.proto\x12\x06grover\"~\n" +
	"\x12StartServerRequest\x12\x19\n" +
	"\budp_port\x18\x01 \x01(\rR\audpPort\x12(\n" +
	"\x10workers_per_file\x18\x02 \x01(\rR\x0eworkersPerFile\x12#\n" +
	"\rmax_transfers\x18\x03 \x01(\rR\fmaxTransfers\"S\n" +
	"\x13StartServerResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x13\n" +
	"\x11StopServerRequest\">\n" +
	"\x12StopServerResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x9b\x01\n" +
	"\fGroverServer\x12F\n" +
	"\vStartServer\x12\x1a.grover.StartServerRequest\x1a\x1b.grover.StartServerResponse\x12C\n" +
	"\n" +
	"StopServer\x12\x19.grover.StopServerRequest\x1a\x1a.grover.StopServerResponseB#Z!github.com/jgoldverg/grover/pb;pbb\x06proto3"

var (
	file_grover_udp_proto_rawDescOnce sync.Once
	file_grover_udp_proto_rawDescData []byte
)

func file_grover_udp_proto_rawDescGZIP() []byte {
	file_grover_udp_proto_rawDescOnce.Do(func() {
		file_grover_udp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grover_udp_proto_rawDesc), len(file_grover_udp_proto_rawDesc)))
	})
	return file_grover_udp_proto_rawDescData
}

var file_grover_udp_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_grover_udp_proto_goTypes = []any{
	(*StartServerRequest)(nil),  // 0: grover.StartServerRequest
	(*StartServerResponse)(nil), // 1: grover.StartServerResponse
	(*StopServerRequest)(nil),   // 2: grover.StopServerRequest
	(*StopServerResponse)(nil),  // 3: grover.StopServerResponse
}
var file_grover_udp_proto_depIdxs = []int32{
	0, // 0: grover.GroverServer.StartServer:input_type -> grover.StartServerRequest
	2, // 1: grover.GroverServer.StopServer:input_type -> grover.StopServerRequest
	1, // 2: grover.GroverServer.StartServer:output_type -> grover.StartServerResponse
	3, // 3: grover.GroverServer.StopServer:output_type -> grover.StopServerResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grover_udp_proto_init() }
func file_grover_udp_proto_init() {
	if File_grover_udp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grover_udp_proto_rawDesc), len(file_grover_udp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grover_udp_proto_goTypes,
		DependencyIndexes: file_grover_udp_proto_depIdxs,
		MessageInfos:      file_grover_udp_proto_msgTypes,
	}.Build()
	File_grover_udp_proto = out.File
	file_grover_udp_proto_goTypes = nil
	file_grover_udp_proto_depIdxs = nil
}
